---
- name: Initial Setup
  hosts: all
  remote_user: root

  tasks:
  - name: Add SSH key for root
    lineinfile:
      path: ~/.ssh/authorized_keys
      create: yes
      state: present
      line: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOg2pNUaS+QtBQxeln+AHTDhbf+Apt4pBEIBK8DJXE9H

  - name: Configure SSH Daemon
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    with_items:
    - { regexp: '^[(#)|(# )]?Port[ 0-9]+$', line: 'Port 22' }
    - { regexp: '^[(#)|(# )]?PermitRootLogin [(yes)|(no)|(without\-password)]+$' , line: 'PermitRootLogin without-password' }
    - { regexp: '^[(#)|(# )]?HostKey /etc/ssh/ssh_host_ed25519_key+$', line: 'HostKey /etc/ssh/ssh_host_ed25519_key' }
    - { regexp: '^[(#)|(# )]?PasswordAuthentication [(yes)|(no)]+$', line: 'PasswordAuthentication no' }
    notify: Restart SSHD


  - name: Update all packages for Debian-like Systems
    apt:
      update_cache: yes
      name: '*'
      force_apt_get: yes
      state: latest
    when: ansible_facts['os_family'] == 'Debian'
    notify: Autoremove Packages using APT

  - name: Update all packages for RHEL like systems
    dnf:
      update_cache: yes
      name: "*"
      state: latest
    when: ansible_facts['os_family'] == 'RedHat'
    notify: Autoremove Packages using DNF

  - name: UFW allow OpenSSH
    community.general.ufw:
      rule: allow
      name: OpenSSH
    when: ansible_facts['os_family'] == 'Debian'
  
  - name: Enable UFW
    community.general.ufw:
      state: enabled

  handlers:
  - name: Autoremove Packages using DNF
    dnf:
      autoremove: yes

  - name: Autoremove Packages using APT
    apt:
      autoremove: yes
      purge: yes

  - name: Restart SSHD
    service:
      name: sshd
      state: restarted
